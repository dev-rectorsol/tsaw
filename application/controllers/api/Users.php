<?php
defined('BASEPATH') OR exit('No direct script access allowed');

require(APPPATH . 'libraries/REST_Controller.php');

class Users extends REST_Controller
{

    function __construct() {
        // Construct the parent class
        parent::__construct();

        $this->load->model('common_model');

        $this->load->library(['auth', 'session']);
        $this->load->library('form_validation');

    }

    function index_post()
    {
        $users = $this->db->get('user')->result();

        if ($users)
        {
            $this->response($users, 200);
        }
        else
        {
            $this->response(NULL, 404);
        }
    }

    function user_get()
    {
        if (!$this->get('id'))
        {
            $this->response(NULL, 400);
        }

        $user = $this->db->get_where('user', array('id' => $this->get('id')))->row();

        if ($user)
        {
            $this->response($user, 200); // 200 being the HTTP response code
        }
        else
        {
            $this->response(NULL, 404);
        }
    }

    function user_put()
    {
        $update = array(
            'updated_at' => date("Y-m-d H:i:s")
        );

        if (!empty($this->put('name'))) {
            $update['name'] = $this->put('name');
        }

        if (!empty($this->put('email'))) {
            $update['email'] = $this->put('email');
        }

        if (!empty($this->put('password'))) {
            $update['password'] = sha1($this->put('password'));
        }

        $result = $this->db->update('user', $update, array('id' => $this->put('id')));

        if ($result === FALSE)
        {
            $this->response(array('status' => 'failed'), 200);
        }
        else
        {
            $this->response(array('status' => 'success'), 200);
        }
    }

    public function user_post() {

       $data =  $this->security->xss_clean($_POST); // cleaning proccess for POST data from view
       $check = $this->common_model->check_user($data); // check if user is aleady exist
       if($check) {

         $this->response(array('is_registeration' => 0, 'is_login' => 0, 'msg' => 'user already exist'), 200);

       } else {
         if(ctype_digit($data['username'])) {
           $phone = $data['username'];
           $email = null;
         } else {
           $phone = null;
           $email = $data['username'];
         }
         $pass = password_hash($data["password"], PASSWORD_DEFAULT);  // Password Default
         $text = getCustomId($this->common_model->get_last_id('logme'), 'CHO');
         //echo $text;exit;
         $message = [
           'logid' => $text, // Automatically generated by the model
           'email' => $email,
           'phone' => $phone,
           'password' => $pass,
           'status' => 'active',
           'role' => 's',
           'joindate' => current_datetime(),
         ];
         $str = $this->common_model->insert($message,'logme');
         if($str!='') {
           $details = [
             "user_id" => $text,
             "name" => $data['fullname']
           ];
           $this->common_model->insert($details,'user_details');
           $this->common_model->insert(array('user_id' => $text, 'role_id' => 2),'roles_users');
           $this->common_model->insert(array('root' => $text), 'thumbnail');

           $_POST['email'] = ($email != null) ? $email : $phone;

           $temp = $this->auth->login($_POST);
           if($temp['status']) {
             $data = [
               'session' => $this->session->userdata('__ci_last_regenerate'),
               'uid' => $this->session->userdata('userID'),
               'uname' => $this->session->userdata('username'),
               'uemail' => $this->session->userdata('email'),
               'uphone' => $this->session->userdata('phone'),
               'roles' => $this->session->userdata('roles'),
               'is_login' => $this->session->userdata('loginStatus'),
               'is_registeration' => $this->session->userdata('loginStatus'),
               'msg' => 'user registration success'
             ];
             $this->response($data, 200);
           } else{
             $this->response(array('is_registeration' => 1, 'is_login' => 0,'msg' => 'user registration success.'), 200);
           }
         } else {
           $this->response(array('is_registeration' => 0, 'is_login' => 0,'msg' => 'user registration faild.'), 200);
         }
       }
     }

    function user_delete()
    {
        $result = $this->db->delete('user', array('id' => $this->delete('id')));

        if ($result === FALSE)
        {
            $this->response(array('status' => 'failed'), 200);
        }
        else
        {
            $this->response(array('status' => 'success'), 200);
        }
    }

}
